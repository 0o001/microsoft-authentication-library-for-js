<a href="/">Go Back</a>

<script src="/auth/lib/msal-browser.js"></script>
<script type="text/javascript">
    const msalInstance = new msal.PublicClientApplication({
        auth: {
            clientId: "{{clientId}}",
            redirectUri: "http://localhost:3000/auth/client-redirect",
            authority: "https://login.microsoftonline.com/common"
        }
    })

    // Only handle hash when in top frame
    if (window === window.top) {
        msalInstance.handleRedirectPromise()
            .then(result => {
                if (result) {
                    console.log('MSAL: Returning from login');
                    return result;
                }
                
                const params = new URLSearchParams(document.location.search);
                const sid = params.get("sid");
                const code = params.get("code");
                const loginHint = decodeURIComponent(params.get("login_hint"));

                const tokenQueryParameters = {
                    dc: "ESTS-PUB-WUS2-AZ1-FD000-TEST1",
                    hybridspa: "true"
                }

                const hybridParams = !!(code);
                console.log(`MSAL: Initiating client-side auth (hybrid: ${hybridParams})`);

                if (hybridParams) {
                    const timeLabel = "Time for acquireTokenByCode";
                    console.time(timeLabel);
                    console.log('MSAL: acquireTokenByCode hybrid parameters present');

                    return msalInstance.acquireTokenByCode({
                        code,
                        tokenQueryParameters
                    })
                        .then(result => {
                            console.timeEnd(timeLabel);
                            console.log('MSAL: acquireTokenByCode completed successfully', result);
                        })
                        .catch(error => {
                            console.timeEnd(timeLabel);
                            console.error('MSAL: acquireTokenByCode failed', error);

                            if (error instanceof msal.InteractionRequiredAuthError) {
                                console.log('MSAL: acquireTokenByCode failed, redirecting')
                                // Use loginHint from server to ensure same user
                                return msalInstance.loginRedirect({
                                    loginHint
                                })
                            }
                        });
                } else {
                    const timeLabel = "Time for ssoSilent";
                    console.time(timeLabel);
                    console.log('MSAL: ssoSilent hybrid parameters not present');

                    return msalInstance.ssoSilent({
                        sid,
                        loginHint,
                        tokenQueryParameters
                    })
                        .then(result => {
                            console.timeEnd(timeLabel);
                            console.log('MSAL: ssoSilent completed successfully', result);
                        })
                        .catch((error) => {
                            console.timeEnd(timeLabel);
                            console.error('MSAL: ssoSilent failed', error);

                            if (error instanceof msal.InteractionRequiredAuthError) {
                                console.log('MSAL: ssoSilent failed, redirecting')
                                // Use loginHint from server to ensure same user
                                return msalInstance.loginRedirect({
                                    loginHint
                                })
                            }
                        });
                }
            });
    }
</script>
