name: Publish Packages

# This action will trigger when Release PR from release-staging branch is merged into dev
on:
  pull_request:
    types: [closed]
    branches:
      - dev
  # Enable ability to manually trigger workflow
  workflow_dispatch:
    inputs:
      packages:
        description: "List of packages to publish. e.g ['msal-core', 'msal-common', 'msal-browser']"
        required: true
        default: "[]"

# Job will run on a ubuntu instance
jobs:
  pre-publish:
    if: (github.event.pull_request.merged == true && github.head_ref == 'release-staging')
    runs-on: ubuntu-latest

    outputs:
      packages: ${{ steps.filter.outputs.changes }}

    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            core:
              - 'lib/msal-core/package.json'
            common: 
              - 'lib/msal-common/package.json'
            browser: 
              - 'lib/msal-browser/package.json'
            node:
              - 'lib/msal-node/package.json'
            angular:
              - 'lib/msal-angular/package.json'
            react:
              - 'lib/msal-react/package.json'
            node-extensions:
              - 'extensions/msal-node-extensions/package.json'
          list-files: json

  publish-msal-core:
    name: msal-core
    needs: pre-publish
    if: |
      !failure() && 
      (contains(toJSON(needs.pre-publish.outputs.packages), 'msal-core') || 
      contains(toJSON(github.event.inputs.packages), 'msal-core')) 
    uses: AzureAD/microsoft-authentication-library-for-js/.github/workflows/publish-template.yml@publish-workflow
    with:
      path: 'lib'
      lib-name: 'msal-core'
      cdn: true
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      CDN_EUNO_SAS: ${{ secrets.CDN_EUNO_SAS }}
      CDN_USWE_SAS: ${{ secrets.CDN_USWE_SAS }}

  publish-msal-common:
    name: msal-common
    needs: pre-publish
    if: |
      !failure() && 
      (contains(toJSON(needs.pre-publish.outputs.packages), 'msal-common') || 
      contains(toJSON(github.event.inputs.packages), 'msal-common')) 
    uses: AzureAD/microsoft-authentication-library-for-js/.github/workflows/publish-template.yml@publish-workflow
    with:
      path: 'lib'
      lib-name: 'msal-common'
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-msal-browser:
    name: msal-browser
    needs: [pre-publish, publish-msal-common]
    if: |
      !failure() && 
      (contains(toJSON(needs.pre-publish.outputs.packages), 'msal-browser') || 
      contains(toJSON(github.event.inputs.packages), 'msal-browser')) 
    uses: AzureAD/microsoft-authentication-library-for-js/.github/workflows/publish-template.yml@publish-workflow
    with:
      path: 'lib'
      lib-name: 'msal-browser'
      cdn: true
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      CDN_EUNO_SAS: ${{ secrets.CDN_EUNO_SAS }}
      CDN_USWE_SAS: ${{ secrets.CDN_USWE_SAS }}

  publish-msal-node:
    name: msal-node
    needs: [pre-publish, publish-msal-common]
    if: |
      !failure() && 
      (contains(toJSON(needs.pre-publish.outputs.packages), 'msal-node') || 
      contains(toJSON(github.event.inputs.packages), 'msal-node')) 
    uses: AzureAD/microsoft-authentication-library-for-js/.github/workflows/publish-template.yml@publish-workflow
    with:
      path: 'lib'
      lib-name: 'msal-node'
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-msal-angular:
    name: msal-angular
    needs: [pre-publish, publish-msal-browser]
    if: |
      !failure() && 
      (contains(toJSON(needs.pre-publish.outputs.packages), 'msal-angular') || 
      contains(toJSON(github.event.inputs.packages), 'msal-angular')) 
    uses: AzureAD/microsoft-authentication-library-for-js/.github/workflows/publish-template.yml@publish-workflow
    with:
      path: 'lib'
      lib-name: 'msal-angular'
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-msal-react:
    name: msal-react
    needs: [pre-publish, publish-msal-browser]
    if: |
      !failure() && 
      (contains(toJSON(needs.pre-publish.outputs.packages), 'msal-react') || 
      contains(toJSON(github.event.inputs.packages), 'msal-react')) 
    uses: AzureAD/microsoft-authentication-library-for-js/.github/workflows/publish-template.yml@publish-workflow
    with:
      path: 'lib'
      lib-name: 'msal-react'
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-msal-node-extensions:
    name: msal-node-extensions
    needs: [pre-publish, publish-msal-common]
    if: |
      !failure() && 
      (contains(toJSON(needs.pre-publish.outputs.packages), 'msal-node-extensions') || 
      contains(toJSON(github.event.inputs.packages), 'msal-node-extensions')) 
    uses: AzureAD/microsoft-authentication-library-for-js/.github/workflows/publish-template.yml@publish-workflow
    with:
      path: 'extensions'
      lib-name: 'msal-node-extensions'
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  post-publish:
    needs: [
      publish-msal-core, 
      publish-msal-common, 
      publish-msal-browser, 
      publish-msal-angular, 
      publish-msal-react, 
      publish-msal-node, 
      publish-msal-node-extensions
    ]
    if: |
      !failure()
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - uses: actions/checkout@v2
        # Setup node with version 12.x
      - uses: actions/setup-node@v1

      - name: Download msal-core Artifacts
        if: needs.publish-msal-core.result == 'success'
        uses: actions/download-artifact@v2
        with: 
          name: msal-core-artifacts
          path: artifacts/msal-core

      - name: Save Core CDN SRI Hashes
        if: needs.publish-msal-core.result == 'success'
        run: |
          cp artifacts/msal-core/README.md lib/msal-core/README.md
          cp artifacts/msal-core/docs/cdn-usage.md lib/msal-core/docs/cdn-usage.md

      - name: Download msal-browser Artifacts
        if: needs.publish-msal-browser.result == 'success'
        uses: actions/download-artifact@v2
        with: 
          name: msal-browser-artifacts
          path: artifacts/msal-browser

      - name: Save Browser CDN SRI Hashes
        if: needs.publish-msal-browser.result == 'success'
        run: |
          cp artifacts/msal-browser/README.md lib/msal-browser/README.md
          cp artifacts/msal-browser/docs/cdn-usage.md lib/msal-browser/docs/cdn-usage.md

      - name: Remove artifacts working-directory
        run: rm -rf artifacts

      - name: Update package-locks
        run: npm install

      - name: Create Github Releases and Discussions
        run: node ./.github/create-releases.js

      - name: Get release date
        id: release-date
        run: echo "::set-output name=date::$(node release-scripts/getReleaseDate.js)"

      - name: Get branch
        id: get-branch
        # TODO: Update this script to output the date with '-' instead of ' '
        run: echo "::set-output name=date::$(node release-scripts/getReleaseDate.js)"

      # Create Pull Request from post-release-month-year to dev
      - name: Create Pull Request
        id: pr
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: Post-release
          branch: post-release-${{steps.release-date.outputs.date}}
          title: "${{ steps.release-date.outputs.date }} Post Release"
          body: |
            This PR contains package lock updates & cdn README updates for msal-browser and msal-core.
          draft: false
