{"version":3,"file":"msal-node-extensions.esm.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/utils/Constants.ts","../src/error/PersistenceError.ts","../src/lock/CrossPlatformLock.ts","../src/persistence/PersistenceCachePlugin.ts","../src/persistence/FilePersistence.ts","../src/dpapi/Dpapi.ts","../src/persistence/FilePersistenceWithDataProtection.ts","../src/persistence/DataProtectionScope.ts","../src/persistence/KeychainPersistence.ts","../src/persistence/LibSecretPersistence.ts"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport const Constants = {\r\n\r\n    /**\r\n     * An existing file was the target of an operation that required that the target not exist\r\n     */\r\n    EEXIST_ERROR: \"EEXIST\",\r\n\r\n    /**\r\n     * No such file or directory: Commonly raised by fs operations to indicate that a component\r\n     * of the specified pathname does not exist. No entity (file or directory) could be found\r\n     * by the given path\r\n     */\r\n    ENOENT_ERROR: \"ENOENT\",\r\n\r\n    /**\r\n     * Default service name for using MSAL Keytar\r\n     */\r\n    DEFAULT_SERVICE_NAME: \"msal-node-extensions\",\r\n};\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport class PersistenceError extends Error {\r\n\r\n    // Short string denoting error\r\n    errorCode: string;\r\n    // Detailed description of error\r\n    errorMessage: string;\r\n\r\n    constructor(errorCode: string, errorMessage: string) {\r\n        const errorString = errorMessage ? `${errorCode}: ${errorMessage}` : errorCode;\r\n        super(errorString);\r\n        Object.setPrototypeOf(this, PersistenceError.prototype);\r\n\r\n        this.errorCode = errorCode;\r\n        this.errorMessage = errorMessage;\r\n        this.name = \"PersistenceError\";\r\n    }\r\n\r\n    static createFileSystemError(errorCode: string, errorMessage: string): PersistenceError {\r\n        return new PersistenceError(errorCode, errorMessage);\r\n    }\r\n\r\n    static createLibSecretError(errorCode: string, errorMessage: string): PersistenceError {\r\n        const updatedErrorMessage = `Error accessing Gnome Keyring: ${errorCode}- ${errorMessage}`;\r\n        return new PersistenceError(\"GnomeKeyringError\", updatedErrorMessage);\r\n    }\r\n\r\n    static createKeychainPersistenceError(errorCode: string, errorMessage: string): PersistenceError {\r\n        const updatedErrorMessage = `Error accessing Keychain: ${errorCode}- ${errorMessage}`;\r\n        return new PersistenceError(\"KeychainError\", updatedErrorMessage);\r\n    }\r\n\r\n    static createFilePersistenceWithDPAPIError(errorCode: string,errorMessage: string): PersistenceError {\r\n        const updatedErrorMessage = `Error accessing DPAPI encrypted file: ${errorCode}- ${errorMessage}`;\r\n        return new PersistenceError(\"DPAPIEncryptedFileError\", updatedErrorMessage);\r\n    }\r\n\r\n    static createCrossPlatformLockError(errorCode: string, errorMessage: string): PersistenceError {\r\n        const updatedErrorMessage = `Error acquiring lock: ${errorCode}- ${errorMessage}`;\r\n        return new PersistenceError(\"CrossPlatformLockError\", updatedErrorMessage);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { open, close, write, unlink } from \"fs\";\r\nimport { promisify } from \"util\";\r\nimport { pid } from \"process\";\r\nimport { CrossPlatformLockOptions } from \"./CrossPlatformLockOptions\";\r\nimport { Constants } from \"../utils/Constants\";\r\nimport { PersistenceError } from \"../error/PersistenceError\";\r\n\r\n/**\r\n * Cross-process lock that works on all platforms.\r\n */\r\nexport class CrossPlatformLock {\r\n\r\n    private readonly lockFilePath: string;\r\n    private lockFileDescriptor: number;\r\n    private readonly retryNumber: number;\r\n    private readonly retryDelay: number;\r\n\r\n    constructor(lockFilePath:string, lockOptions?: CrossPlatformLockOptions) {\r\n        this.lockFilePath = lockFilePath;\r\n        this.retryNumber = lockOptions ? lockOptions.retryNumber : 500;\r\n        this.retryDelay = lockOptions ? lockOptions.retryDelay : 100;\r\n    }\r\n\r\n    public async lock(): Promise<void> {\r\n        const processId = pid.toString();\r\n        for (let tryCount = 0; tryCount < this.retryNumber; tryCount++)\r\n            try {\r\n                console.log(\"Pid \" + pid + \" trying to acquire lock\");\r\n                const openPromise = promisify(open);\r\n                this.lockFileDescriptor = await openPromise(this.lockFilePath, \"wx+\");\r\n                console.log(\"Pid \" + pid + \" acquired lock\");\r\n                const writePromise = promisify(write);\r\n                await writePromise(this.lockFileDescriptor, processId);\r\n                break;\r\n            } catch (err) {\r\n                if (err.code == Constants.EEXIST_ERROR) {\r\n                    console.log(err);\r\n                    await this.sleep(this.retryDelay);\r\n                } else {\r\n                    throw PersistenceError.createCrossPlatformLockError(err.code, err.message);\r\n                }\r\n            }\r\n    }\r\n\r\n    public async unlock(): Promise<void> {\r\n        try {\r\n            // delete lock file\r\n            const unlinkPromise = promisify(unlink);\r\n            await unlinkPromise(this.lockFilePath);\r\n            const closePromise = promisify(close);\r\n            await closePromise(this.lockFileDescriptor);\r\n        } catch(err){\r\n            if(err.code == Constants.ENOENT_ERROR){\r\n                console.log(\"Lockfile does not exist\");\r\n            } else {\r\n                throw PersistenceError.createCrossPlatformLockError(err.code, err.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    private sleep(ms): Promise<void> {\r\n        return new Promise((resolve) => {\r\n            setTimeout(resolve, ms);\r\n        });\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { IPersistence } from \"../persistence/IPersistence\";\r\nimport { CrossPlatformLock } from \"../lock/CrossPlatformLock\";\r\nimport { CrossPlatformLockOptions } from \"../lock/CrossPlatformLockOptions\";\r\nimport { pid } from \"process\";\r\n\r\nexport class PersistenceCachePlugin {\r\n\r\n    public persistence: IPersistence;\r\n    public lastSync: number;\r\n    public currentCache: string;\r\n    public lockFilePath: string;\r\n\r\n    private crossPlatformLock: CrossPlatformLock;\r\n    private readonly lockOptions: CrossPlatformLockOptions;\r\n\r\n    constructor(persistence: IPersistence, lockOptions?: CrossPlatformLockOptions) {\r\n        this.persistence = persistence;\r\n        this.lockFilePath = `${this.persistence.getFilePath()}.lockfile`;\r\n        this.lastSync = 0;\r\n        this.currentCache = null;\r\n        this.lockOptions = lockOptions;\r\n    }\r\n\r\n    public async readFromStorage(): Promise<string> {\r\n        console.log(\"Reading from storage\");\r\n        if (await this.persistence.reloadNecessary(this.lastSync) || this.currentCache == null) {\r\n            try {\r\n                console.log(\"Reload necessary.  Last sync time: \" + this.lastSync);\r\n                this.crossPlatformLock = new CrossPlatformLock(this.lockFilePath, this.lockOptions);\r\n                await this.crossPlatformLock.lock();\r\n\r\n                this.currentCache = await this.persistence.load();\r\n                this.lastSync = new Date().getTime();\r\n                console.log(\"Last sync time updated to: \", this.lastSync);\r\n            } finally {\r\n                await this.crossPlatformLock.unlock();\r\n                delete this.crossPlatformLock;\r\n                console.log(\"Pid \" + pid + \" Released lock\");\r\n            }\r\n        }\r\n        return this.currentCache;\r\n    }\r\n\r\n    public async writeToStorage(callback: (diskState: string) => string): Promise<void> {\r\n        try {\r\n            console.log(\"Writing to storage\");\r\n            this.crossPlatformLock = new CrossPlatformLock(this.lockFilePath, this.lockOptions);\r\n            await this.crossPlatformLock.lock();\r\n\r\n            if(await this.persistence.reloadNecessary(this.lastSync)){\r\n                console.log(\"Reload necessary.  Last sync time: \" + this.lastSync);\r\n                this.currentCache = await this.persistence.load();\r\n                this.lastSync = new Date().getTime();\r\n                console.log(\"Last sync time updated to: \", this.lastSync);\r\n            }\r\n\r\n            this.currentCache = await callback(this.currentCache);\r\n            await this.persistence.save(this.currentCache);\r\n        } finally {\r\n            await this.crossPlatformLock.unlock();\r\n            console.log(\"Pid \" + pid + \" Released lock\");\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { writeFile, readFile, unlink, stat, mkdir, close, open } from \"fs\";\r\nimport { promisify } from \"util\";\r\nimport { dirname } from \"path\";\r\nimport { IPersistence } from \"./IPersistence\";\r\nimport { Constants } from \"../utils/Constants\";\r\nimport { PersistenceError } from \"../error/PersistenceError\";\r\n\r\nexport class FilePersistence implements IPersistence {\r\n\r\n    private filePath: string;\r\n\r\n    public static async create(fileLocation: string): Promise<FilePersistence> {\r\n        const filePersistence = new FilePersistence();\r\n        filePersistence.filePath = fileLocation;\r\n        await filePersistence.createCacheFile();\r\n        return filePersistence;\r\n    }\r\n\r\n    public async save(contents: string): Promise<void> {\r\n        const writeFilePromise = promisify(writeFile);\r\n        try {\r\n            await writeFilePromise(this.getFilePath(), contents, \"utf-8\");\r\n        } catch (err) {\r\n            throw PersistenceError.createFileSystemError(err.code, err.message);\r\n        }\r\n    }\r\n\r\n    public async saveBuffer(contents: Uint8Array): Promise<void> {\r\n        const writeFilePromise = promisify(writeFile);\r\n        try {\r\n            await writeFilePromise(this.getFilePath(), contents);\r\n        } catch (err) {\r\n            throw PersistenceError.createFileSystemError(err.code, err.message);\r\n        }\r\n    }\r\n\r\n    public async load(): Promise<string> {\r\n        const readFilePromise = promisify(readFile);\r\n        try {\r\n            return await readFilePromise(this.getFilePath(), \"utf-8\");\r\n        } catch (err) {\r\n            throw PersistenceError.createFileSystemError(err.code, err.message);\r\n        }\r\n    };\r\n\r\n    public async loadBuffer(): Promise<Uint8Array> {\r\n        const readFilePromise = promisify(readFile);\r\n        try {\r\n            return await readFilePromise(this.getFilePath());\r\n        } catch (err) {\r\n            throw PersistenceError.createFileSystemError(err.code, err.message);\r\n        }\r\n    };\r\n\r\n    public async delete(): Promise<boolean> {\r\n        const deleteFilePromise = promisify(unlink);\r\n        try {\r\n            await deleteFilePromise(this.getFilePath());\r\n            return true;\r\n        } catch (err) {\r\n            if (err.code == Constants.ENOENT_ERROR) {\r\n                // file does not exist, so it was not deleted\r\n                return false;\r\n            }\r\n            throw PersistenceError.createFileSystemError(err.code, err.message);\r\n        }\r\n    }\r\n\r\n    public getFilePath(): string {\r\n        return this.filePath;\r\n    }\r\n\r\n    public async reloadNecessary(lastSync: number): Promise<boolean> {\r\n        return lastSync < await this.timeLastModified();\r\n    }\r\n\r\n    private async timeLastModified(): Promise<number> {\r\n        try {\r\n            const statPromise = promisify(stat);\r\n            const stats = await statPromise(this.filePath);\r\n            return stats.mtime.getTime();\r\n        } catch (err) {\r\n            if (err.code == Constants.ENOENT_ERROR) {\r\n                // file does not exist, so it's never been modified\r\n                return 0;\r\n            }\r\n            throw PersistenceError.createFileSystemError(err.code, err.message);\r\n        }\r\n    }\r\n\r\n    private async createCacheFile(): Promise<void> {\r\n        await this.createFileDirectory();\r\n        // File is created only if it does not exist\r\n        const closePromise = promisify(close);\r\n        const openPromise = promisify(open);\r\n        await closePromise(await openPromise(this.filePath, \"a\"))\r\n    }\r\n\r\n    private async createFileDirectory(): Promise<void> {\r\n        try {\r\n            const mkdirPromise = promisify(mkdir);\r\n            await mkdirPromise(dirname(this.filePath), {recursive: true});\r\n        } catch (err) {\r\n            if (err.code == Constants.EEXIST_ERROR) {\r\n                console.log(`Directory ${dirname(this.filePath)} \" already exists\"`);\r\n            } else {\r\n                throw PersistenceError.createFileSystemError(err.code, err.message);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport interface DpapiBindings{\r\n    protectData(dataToEncrypt: Uint8Array, optionalEntropy: Uint8Array, scope: string): Uint8Array\r\n    unprotectData(encryptData: Uint8Array, optionalEntropy: Uint8Array, scope: string): Uint8Array\r\n}\r\n\r\nexport var Dpapi: DpapiBindings = require(\"bindings\")(\"dpapi\");\r\nexport default Dpapi;\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { IPersistence } from \"./IPersistence\";\r\nimport { FilePersistence } from \"./FilePersistence\";\r\nimport { PersistenceError } from \"../error/PersistenceError\";\r\nimport { Dpapi } from \"../dpapi/Dpapi\";\r\nimport { DataProtectionScope } from \"./DataProtectionScope\";\r\n\r\nexport class FilePersistenceWithDataProtection implements IPersistence {\r\n\r\n    private filePersistence: FilePersistence;\r\n    private scope: DataProtectionScope;\r\n    private optionalEntropy: Uint8Array;\r\n\r\n    constructor(scope: DataProtectionScope, optionalEntropy?: string) {\r\n        this.scope = scope;\r\n        this.optionalEntropy = optionalEntropy ? Buffer.from(optionalEntropy, \"utf-8\") : null;\r\n    }\r\n\r\n    public static async create(\r\n        fileLocation: string,\r\n        scope: DataProtectionScope,\r\n        optionalEntropy?: string): Promise<FilePersistenceWithDataProtection> {\r\n\r\n        const persistence = new FilePersistenceWithDataProtection(scope, optionalEntropy);\r\n        persistence.filePersistence = await FilePersistence.create(fileLocation);\r\n        return persistence;\r\n    }\r\n\r\n    public async save(contents: string): Promise<void> {\r\n        try {\r\n            const encryptedContents = Dpapi.protectData(\r\n                Buffer.from(contents, \"utf-8\"),\r\n                this.optionalEntropy,\r\n                this.scope.toString());\r\n            await this.filePersistence.saveBuffer(encryptedContents);\r\n        } catch (err) {\r\n            throw PersistenceError.createFilePersistenceWithDPAPIError(err.code, err.message);\r\n        }\r\n    }\r\n\r\n    public async load(): Promise<string | null> {\r\n        try {\r\n            const encryptedContents = await this.filePersistence.loadBuffer();\r\n            // TODO use MSAL common util instead\r\n            if (typeof encryptedContents === \"undefined\" || !encryptedContents || 0 === encryptedContents.length) {\r\n                return null;\r\n            }\r\n            return Dpapi.unprotectData(\r\n                encryptedContents,\r\n                this.optionalEntropy,\r\n                this.scope.toString()).toString();\r\n        } catch (err) {\r\n            throw PersistenceError.createFilePersistenceWithDPAPIError(err.code, err.message);\r\n        }\r\n    }\r\n\r\n    public async delete(): Promise<boolean> {\r\n        return this.filePersistence.delete();\r\n    }\r\n\r\n    public async reloadNecessary(lastSync: number): Promise<boolean> {\r\n        return this.filePersistence.reloadNecessary(lastSync);\r\n    }\r\n\r\n    public getFilePath(): string {\r\n        return this.filePersistence.getFilePath();\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport enum DataProtectionScope {\r\n    CurrentUser = \"CurrentUser\",\r\n    LocalMachine = \"LocalMachine\",\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { setPassword, getPassword, deletePassword } from \"keytar\";\r\nimport { FilePersistence } from \"./FilePersistence\";\r\nimport { IPersistence } from \"./IPersistence\";\r\nimport { PersistenceError } from \"../error/PersistenceError\";\r\n\r\nexport class KeychainPersistence implements IPersistence {\r\n\r\n    protected readonly serviceName;\r\n    protected readonly accountName;\r\n    private filePersistence: FilePersistence;\r\n\r\n    private constructor(serviceName: string, accountName: string) {\r\n        this.serviceName = serviceName;\r\n        this.accountName = accountName;\r\n    }\r\n\r\n    public static async create(\r\n        fileLocation: string,\r\n        serviceName: string,\r\n        accountName: string): Promise<KeychainPersistence> {\r\n\r\n        const persistence = new KeychainPersistence(serviceName, accountName);\r\n        persistence.filePersistence = await FilePersistence.create(fileLocation);\r\n        return persistence;\r\n    }\r\n\r\n    public async save(contents: string): Promise<void> {\r\n        try {\r\n            await setPassword(this.serviceName, this.accountName, contents);\r\n        } catch (err) {\r\n            throw PersistenceError.createKeychainPersistenceError(err.code, err.message);\r\n        }\r\n        // Write dummy data to update file mtime\r\n        await this.filePersistence.save(\"{}\");\r\n    }\r\n\r\n    public async load(): Promise<string | null> {\r\n        try{\r\n            return await getPassword(this.serviceName, this.accountName);\r\n        } catch(err){\r\n            throw PersistenceError.createKeychainPersistenceError(err.code, err.message);\r\n        }\r\n    }\r\n\r\n    public async delete(): Promise<boolean> {\r\n        try {\r\n            return await deletePassword(this.serviceName, this.accountName);\r\n        } catch (err) {\r\n            throw PersistenceError.createKeychainPersistenceError(err.code, err.message);\r\n        }\r\n    }\r\n\r\n    public async reloadNecessary(lastSync: number): Promise<boolean> {\r\n        return this.filePersistence.reloadNecessary(lastSync);\r\n    }\r\n\r\n    public getFilePath(): string {\r\n        return this.filePersistence.getFilePath();\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { setPassword, getPassword, deletePassword } from \"keytar\";\r\nimport { FilePersistence } from \"./FilePersistence\";\r\nimport { IPersistence } from \"./IPersistence\";\r\nimport { PersistenceError } from \"../error/PersistenceError\";\r\n\r\nexport class LibSecretPersistence implements IPersistence {\r\n\r\n    protected readonly serviceName;\r\n    protected readonly accountName;\r\n    private filePersistence: FilePersistence;\r\n\r\n    private constructor(serviceName: string, accountName: string) {\r\n        this.serviceName = serviceName;\r\n        this.accountName = accountName;\r\n    }\r\n\r\n    public static async create(\r\n        fileLocation: string,\r\n        serviceName: string,\r\n        accountName: string): Promise<LibSecretPersistence> {\r\n\r\n        const persistence = new LibSecretPersistence(serviceName, accountName);\r\n        persistence.filePersistence = await FilePersistence.create(fileLocation);\r\n        return persistence;\r\n    }\r\n\r\n    public async save(contents: string): Promise<void> {\r\n        try {\r\n            await setPassword(this.serviceName, this.accountName, contents);\r\n        } catch (err) {\r\n            throw PersistenceError.createLibSecretError(err.code, err.message);\r\n        }\r\n        // Write dummy data to update file mtime\r\n        await this.filePersistence.save(\"{}\");\r\n    }\r\n\r\n    public async load(): Promise<string | null> {\r\n        try {\r\n            return await getPassword(this.serviceName, this.accountName);\r\n        } catch (err) {\r\n            throw PersistenceError.createLibSecretError(err.code, err.message);\r\n        }\r\n    }\r\n\r\n    public async delete(): Promise<boolean> {\r\n        try {\r\n            return await deletePassword(this.serviceName, this.accountName);\r\n        } catch (err) {\r\n            throw PersistenceError.createLibSecretError(err.code, err.message);\r\n        }\r\n    }\r\n\r\n    public async reloadNecessary(lastSync: number): Promise<boolean> {\r\n        return this.filePersistence.reloadNecessary(lastSync);\r\n    }\r\n\r\n    public getFilePath(): string {\r\n        return this.filePersistence.getFilePath();\r\n    }\r\n}\r\n"],"names":["Constants","EEXIST_ERROR","ENOENT_ERROR","DEFAULT_SERVICE_NAME","PersistenceError","errorCode","errorMessage","errorString","Object","setPrototypeOf","prototype","name","createFileSystemError","createLibSecretError","updatedErrorMessage","createKeychainPersistenceError","createFilePersistenceWithDPAPIError","createCrossPlatformLockError","Error","CrossPlatformLock","lockFilePath","lockOptions","retryNumber","retryDelay","lock","processId","pid","toString","tryCount","console","log","openPromise","promisify","open","lockFileDescriptor","writePromise","write","err","code","sleep","message","unlock","unlinkPromise","unlink","closePromise","close","ms","Promise","resolve","setTimeout","PersistenceCachePlugin","persistence","getFilePath","lastSync","currentCache","readFromStorage","reloadNecessary","crossPlatformLock","load","Date","getTime","writeToStorage","callback","save","FilePersistence","create","fileLocation","filePersistence","filePath","createCacheFile","contents","writeFilePromise","writeFile","saveBuffer","readFilePromise","readFile","loadBuffer","deleteFilePromise","timeLastModified","statPromise","stat","stats","mtime","createFileDirectory","mkdirPromise","mkdir","dirname","recursive","Dpapi","require","FilePersistenceWithDataProtection","scope","optionalEntropy","Buffer","from","encryptedContents","protectData","length","unprotectData","DataProtectionScope","KeychainPersistence","serviceName","accountName","setPassword","getPassword","deletePassword","LibSecretPersistence"],"mappings":"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"}